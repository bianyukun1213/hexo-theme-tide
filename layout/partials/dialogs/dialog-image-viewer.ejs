<dialog id="tide-dialog-image-viewer" class="tide-dialog un-sc-dlg-fullscreen">
  <div class="tide-dialog-mask un-sc-dlg-mask">
    <img id="tide-viewing-image" loading="lazy" tabindex="0">
  </div>
  <div id="tide-image-viewer-toolbar" class="tide-dialog-container un-bg-black/75 un-fixed un-bottom-0 un-left-1/2 -un-translate-x-1/2 un-p-4 un-mb-4 un-w-100 un-max-w-full un-max-h-2/5 un-rounded-2xl un-text-base un-text-white un-overflow-auto">
    <div id="tide-viewing-image-title" class="un-mb-2 un-text-center un-text-xl"></div>
    <div id="tide-image-viewer-counter" class="un-mb-4 un-text-center"></div>
    <div id="tide-image-viewer-controls" class="un-flex un-flex-wrap un-justify-between un-gap-4 un-mx-auto">
      <button id="tide-image-viewer-btn-prev" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_prev.title') %>">
        <i class="fa-solid <%= tideCtx.dir==='rtl'?'fa-angle-right':'fa-angle-left' %>" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-next" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_next.title') %>">
        <i class="fa-solid <%= tideCtx.dir==='rtl'?'fa-angle-left':'fa-angle-right' %>" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-zoom-in" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_zoom_in.title') %>">
        <i class="fa-solid fa-magnifying-glass-plus" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-zoom-out" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_zoom_out.title') %>">
        <i class="fa-solid fa-magnifying-glass-minus" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-close" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_close.title') %>">
        <i class="fa-solid fa-xmark" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-collapse-toolbar" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_collapse_toolbar.title') %>">
        <i class="fa-solid fa-down-left-and-up-right-to-center" aria-hidden="true"></i>
      </button>
    </div>
  </div>
  <div id="tide-image-viewer-mini-toolbar" class="un-bg-black/75 un-fixed un-bottom-0 un-end-0 un-m-4 un-p-2 un-rounded-full un-text-base un-text-white">
    <div id="tide-image-viewer-mini-controls" class="un-flex un-flex-wrap un-justify-between un-gap-2 un-mx-auto">
      <button id="tide-image-viewer-btn-close-2" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_close.title') %>">
        <i class="fa-solid fa-xmark" aria-hidden="true"></i>
      </button>
      <button id="tide-image-viewer-btn-expand-toolbar" class="un-sc-btn-default un-bg-transparent un-text-white un-border-white un-rounded-full un-size-12 un-shrink-0" title="<%= __('dialog_image_viewer.btn_expand_toolbar.title') %>">
        <i class="fa-solid fa-up-right-and-down-left-from-center" aria-hidden="true"></i>
      </button>
    </div>
  </div>
</dialog>
<%- js(Object.assign(parse_cdn_config('pinchzoom_js',tideCtx.cdn),{defer:true})) %>
<script>
  'use strict';
  (function() {
    if (document.readyState !== 'loading')
      domContentLoadedHandler();
    else
      document.addEventListener('DOMContentLoaded', domContentLoadedHandler);

    window.addEventListener('hexo-blog-decrypt', () => {
      domContentLoadedHandler();
    });

    function domContentLoadedHandler(eDomContentLoaded) {
      const dialogImgViewer = document.getElementById('tide-dialog-image-viewer');
      const dialogMask = document.querySelector('.tide-dialog-mask:has(#tide-viewing-image)');
      const toolbar = document.getElementById('tide-image-viewer-toolbar');
      const viewingImg = document.getElementById('tide-viewing-image');
      const viewingImgTitle = document.getElementById('tide-viewing-image-title');
      const viewingImgCounter = document.getElementById('tide-image-viewer-counter');
      const btnPrev = document.getElementById('tide-image-viewer-btn-prev');
      const btnNext = document.getElementById('tide-image-viewer-btn-next');
      const btnZoomIn = document.getElementById('tide-image-viewer-btn-zoom-in');
      const btnZoomOut = document.getElementById('tide-image-viewer-btn-zoom-out');
      const btnClose = document.getElementById('tide-image-viewer-btn-close');
      const btnClose2 = document.getElementById('tide-image-viewer-btn-close-2');
      const btnCollapseToolbar = document.getElementById('tide-image-viewer-btn-collapse-toolbar');
      const miniToolbar = document.getElementById('tide-image-viewer-mini-toolbar');
      const btnExpandToolbar = document.getElementById('tide-image-viewer-btn-expand-toolbar');
      const rtl = isPageRtl() ? true : false;
      const pz = new PinchZoom.default(viewingImg, {
        listenOnElementNotContainer: true,
        useMouseWheel: true,
        rtl: rtl,
        minZoom: 0.25,
        maxZoom: 4,
        zoomOutFactor: 0,
        onDragStart: function(object, event) {
          viewingImg.style.cursor = 'grabbing';
        },
        onDragEnd: function(object, event) {
          viewingImg.style.cursor = 'grab';
        }
      });
      pz.enable();
      const imgDomStyles = {
        'user-drag': 'none',
        '-webkit-user-drag': 'none',
        'user-select': 'none',
        '-moz-user-select': 'none',
        '-webkit-user-select': 'none',
        '-ms-user-select': 'none',
        'cursor': 'grab'
      };
      for (const key in imgDomStyles) {
        if (Object.prototype.hasOwnProperty.call(imgDomStyles, key)) {
          viewingImg.style[key] = imgDomStyles[key];
        }
      }
      viewingImg.addEventListener('dragstart', () => {
        return;
      });
      const pageImgs = [...document.querySelectorAll('#tide-page .un-prose :not(a)>img:not([display=none]):not(.tide-hidden-to-image-viewer), #tide-post .un-prose :not(a)>img:not([display=none]):not(.tide-hidden-to-image-viewer)')];
      const imgCounts = pageImgs.length;
      for (const element of pageImgs) {
        element.style.cursor = 'zoom-in';
        element.addEventListener('click', function(e) {
          currentImgIndex = pageImgs.indexOf(e.currentTarget);
          openImageViewer();
        });
        element.addEventListener('keydown', function(e) {
          if (e.key === 'Enter') {
            e.preventDefault();
            currentImgIndex = pageImgs.indexOf(e.currentTarget);
            openImageViewer();
          }
        });
      }
      let currentImgIndex;

      function openImage(index) {
        const targetImg = pageImgs[index];
        viewingImg.src = targetImg.src;
        viewingImg.alt = targetImg.alt;
        if (targetImg.title) {
          viewingImg.title = targetImg.title;
          viewingImgTitle.textContent = targetImg.title;
          viewingImgTitle.style.display = 'block';
        } else {
          viewingImg.title = '';
          viewingImgTitle.textContent = '';
          viewingImgTitle.style.display = 'none';
        }
        viewingImgCounter.textContent = currentImgIndex + 1 + clientCtx.progress_marker + imgCounts;
        pz.zoomFactor = 1;
        pz.lastScale = 1;
        pz.resetOffset();
      }

      function toPrev() {
        if (currentImgIndex <= 0)
          currentImgIndex = imgCounts - 1;
        else
          --currentImgIndex;
        openImage(currentImgIndex);
      }

      function toNext() {
        if (currentImgIndex >= imgCounts - 1)
          currentImgIndex = 0;
        else
          ++currentImgIndex;
        openImage(currentImgIndex);
      }

      function zoomIn(step) {
        const zoomFactor = pz.getInitialZoomFactor() * pz.zoomFactor,
          center = {
            x: -pz.offset.x + pz.el.offsetWidth * zoomFactor / 2,
            y: -pz.offset.y + pz.el.offsetHeight * zoomFactor / 2
          },
          newScale = Math.max(
            Math.min(pz.options.maxZoom, pz.lastScale + step),
            pz.options.minZoom
          ),
          scale = newScale / pz.lastScale;
        pz.scale(scale, center);
        pz.lastScale = newScale;
        pz.update();
      }

      function zoomOut(step) {
        const zoomFactor = pz.getInitialZoomFactor() * pz.zoomFactor,
          center = {
            x: -pz.offset.x + pz.el.offsetWidth * zoomFactor / 2,
            y: -pz.offset.y + pz.el.offsetHeight * zoomFactor / 2
          },
          newScale = Math.min(
            Math.max(pz.options.minZoom, pz.lastScale - step),
            pz.options.maxZoom
          ),
          scale = newScale / pz.lastScale;
        pz.scale(scale, center);
        pz.lastScale = newScale;
        pz.update();
      }

      function addOffset(offset) {
        pz.offset.x += offset.x;
        pz.offset.y += offset.y;
        pz.offset = pz.sanitizeOffset(pz.offset);
        pz.update();
      }

      function moveDown(step) {
        addOffset({
          x: 0,
          y: -step
        });
      }

      function moveRight(step) {
        addOffset({
          x: -step,
          y: 0
        });
      }

      function openImageViewer() {
        openImage(currentImgIndex);
        dialogImgViewer.showModal();
        btnNext.focus();
      };

      function collapseToolbar() {
        toolbar.setAttribute('hidden', '');
        miniToolbar.removeAttribute('hidden');
        viewingImg.focus();
      }

      function expandToolbar() {
        toolbar.removeAttribute('hidden');
        miniToolbar.setAttribute('hidden', '');
        btnNext.focus();
      }

      btnPrev.addEventListener('click', () => {
        toPrev();
      });
      btnNext.addEventListener('click', () => {
        toNext();
      });
      btnZoomIn.addEventListener('click', () => {
        zoomIn(0.2);
      });
      btnZoomOut.addEventListener('click', () => {
        zoomOut(0.2);
      });
      btnClose.addEventListener('click', () => {
        dialogImgViewer.close();
      });
      btnClose2.addEventListener('click', () => {
        dialogImgViewer.close();
      });
      btnCollapseToolbar.addEventListener('click', () => {
        collapseToolbar();
      });
      btnExpandToolbar.addEventListener('click', () => {
        expandToolbar();
      });
      viewingImg.addEventListener('keydown', function(e) {
        const xStep = dialogMask.offsetWidth / 20;
        const yStep = dialogMask.offsetHeight / 20;
        switch (e.key) {
          case 'ArrowUp':
            moveDown(-xStep);
            e.preventDefault();
            e.stopPropagation();
            break;
          case 'ArrowDown':
            moveDown(xStep);
            e.preventDefault();
            e.stopPropagation();
            break;
          case 'ArrowLeft':
            moveRight(-yStep);
            e.preventDefault();
            e.stopPropagation();
            break;
          case 'ArrowRight':
            moveRight(yStep);
            e.preventDefault();
            e.stopPropagation();
            break;
        }
      });
      dialogImgViewer.addEventListener('keydown', function(e) {
        switch (e.key) {
          case 'ArrowUp':
            zoomIn(0.1);
            e.preventDefault();
            break;
          case 'ArrowDown':
            zoomOut(0.1);
            e.preventDefault();
            break;
          case 'ArrowLeft':
            rtl ? toNext() : toPrev();
            e.preventDefault();
            break;
          case 'ArrowRight':
            rtl ? toPrev() : toNext();
            e.preventDefault();
            break;
        }
      });
      expandToolbar();
    }
  })();
</script>